# for문
# for 변수 in range(start, end, step):
#   반복할 코드
# 위 형식이 반복문의 기본 형태이며, 중첩이 가능함

# range(start, end, step) 여기서 start, end, step은 정수(ex.range(1, 5, 2))
# start부터 end까지(end는 포함 안됨) step 만큼 증가 / 감소된값을 변수에 넣고 반복
# start랑 step은 생략이 가능.
# start를 생략하면 0
# step을 생략하면 1
# range(5)              => start와 step 둘다 생략된 상태
# range(0, 5)           => step가 생략된 상태
# range(0, 5, 1)        => 완전한 상태
# 위 세가지 모양만 있음

# for i in range(0, 5, 1):    # i변수에 범위(0,1,2,3,4)를 넣으면서 반복. 총 5번 반복
#     print(i)                # 반복할 코드에 변수 사용

# for i in range(0, 5, 1):
#     print('hello')          # 반복할 코드에 변수 사용 X


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #


# 1부터 100까지 홀수만을 출력
# for i in range(1, 101, 2):
#     print(i)


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #


# 5부터 100까지 5의 배수를 출력
# for i in range(5, 105, 5):
#     print(i)


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #


# 10000까지의 제곱수를 출력 print(x**x)
# for i in range(1, 101, 1):
#     print(i*i)


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #


# while문
# while(조건식):
#   code
# 위 형식으로 사용
# if문과 비슷하게 조건식이 True일 경우 실행됨

# i = 0
# while(i < 5):
#     print(i)
#     i += 1      # i = i + 1 이랑 같은뜻, 누적 덧셈


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #


# 1부터 100까지 짝수만을 출력

# z = 2
# while(z < 102):
#     print(z)
#     z += 2      # i = i + 2, 그냥 i + 1을 하면 *변수* i의 값은 바뀌지 않는다.
                # 반면, i = i + 2를 하면 i,즉 2 + 1 이 되고 그게 *변수* i로 넘어간다.


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #


# 1부터 100까지 7의 배수를 출력

# y = 7
# while(y < 105):
#     print(y)
#     y += 7


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #


# 1부터 100까지 분수를 출력

# x = 1
# while(101 > x):     # 에러도 안뜨고 실행이 되지 않는다면 while코드 쪽에 문제가 있음
#     print(1 / x)
#     x += 1          # 결과는 코드와 상관 X
#                     # 결과는 결과일뿐.


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #


# 무한반복
# python 에서는
# while(True):
#   코드
# 위와 같이 while 에 True를 넣어 무한반복이 가능함


# continue 와 break
# continue, break는 for, while 둘다 사용 가능
# continue
# continue를 만나는 순간 다음 반복 진행

# for i in range(0,10,1):
#     if(i%2 == 0):
#         continue        # 짝수일 떄 다음 반복으로, 즉 짝수는 출력 안됨
#     print(i)


# break
# break를 만나는 순간 반복문 종료
# 보통의 경우 break는ㄴ if랑 같이 사용

# i = 0
# while(True):
#     print(i)
#     if(i == 10):
#         break
#     i += 1


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #


# while(True):
#     print("메뉴를 선택해주세요")
#     print("[1. hello 출력]")
#     print("[2. hi 출력]")
#     print("{3. 나 가 기}")
#     menu = int(input())

#     if(menu == 1):
#         print("hello")
#     elif(menu == 2):
#         print("hi")
#     elif(menu == 3):
#         print("메뉴 프로그램을 종료합니다.[삐비비빅-.]")
#         break
#     else:
#         print("1~3 숫자만 입력이 가능합니다.")
#         print(menu, "말고 다른것을 입력해주세요.")
#         print()
#         continue


#     print()
#     print()



# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #



# 중첩 반복문
# 반복문 내부에 반복문이 있는 형식
# 반복문이 2번 중첩이면 이중첩, 3번 중첩이면 3중첩 반복문이다. 실제로는 3중첩 이상은 잘 사용 안함

# for x in range(1, 10, 1):               # 총 9번 반복
#     for y in range(1, 10, 1):            # 총 81번 반복
#         print(x, "*", y, "=", x*y)


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #


# range() 내부에 변수를 이용가능
# for i in range(1, 10, 1):       # range() 내부에서 바깥 반복 변수 사용
#     for j in range(1, i+1, 1):
#         print(i, '*', j, '=', i*j)


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #


# 1~19단을 구현하시오.
